<!-- TODO clean this up and make sure we have all the imports needed

https://github.com/videojs/videojs-contrib-hls

 -->
  <link href="node_modules/video.js/dist/video-js/video-js.css" rel="stylesheet">
  
  <!-- video.js -->
  <script src="node_modules/video.js/dist/video-js/video.js"></script>

  <!-- Media Sources plugin -->
  <script src="node_modules/videojs-contrib-media-sources/src/videojs-media-sources.js"></script>

  <!-- HLS plugin -->
  <script src="src/videojs-hls.js"></script>

  <!-- segment handling -->
  <script src="src/xhr.js"></script>
  <script src="src/flv-tag.js"></script>
  <script src="src/stream.js"></script>
  <script src="src/exp-golomb.js"></script>
  <script src="src/h264-stream.js"></script>
  <script src="src/aac-stream.js"></script>
  <script src="src/metadata-stream.js"></script>
  <script src="src/segment-parser.js"></script>

  <!-- m3u8 handling -->
  <script src="src/m3u8/m3u8-parser.js"></script>
  <script src="src/playlist-loader.js"></script>

  <script src="node_modules/pkcs7/dist/pkcs7.unpad.js"></script>
  <script src="src/decrypter.js"></script>

  <script src="src/bin-utils.js"></script>
  
  <!-- example MPEG2-TS segments -->
  <!-- bipbop -->
  <!-- <script src="test/tsSegment.js"></script> -->
  <!-- bunnies -->
  <!--<script src="test/tsSegment-bc.js"></script>-->

  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 20px;
    }
    .info {
      background-color: #eee;
      border: thin solid #333;
      border-radius: 3px;
      padding: 0 5px;
      margin: 20px 0;
    }
  </style>

  <div class="info">
    <p>The video below is an <a href="https://developer.apple.com/library/ios/documentation/networkinginternet/conceptual/streamingmediaguide/Introduction/Introduction.html#//apple_ref/doc/uid/TP40008332-CH1-SW1">HTTP Live Stream</a>. On desktop browsers other than Safari, the HLS plugin will polyfill support for the format on top of the video.js Flash tech.</p>
    <p>Due to security restrictions in Flash, you will have to load this page over HTTP(S) to see the example in action.</p>
  </div>
  <video id="video"
         class="video-js vjs-default-skin"
         height="480"
         width="640"
         controls>
    <!-- TODO: some way to get the stream type.... -->
    <%
    // this is far too simplistic, we need a better way to do this
    var stream_type = (stream.toLowerCase().indexOf("mpeg")!==-1) ? "x-mpegURL" : "rtmp/mp4"
     %>
    <source src="<%- stream %>" type="<%- stream_type %>">
<!--
   <source src="rtmp://cp67126.edgefcs.net/ondemand/&mp4:mediapm/ovp/content/test/video/spacealonehd_sounas_640_300.mp4" type='rtmp/mp4'>
     <source
       src="http://api.hitbox.tv/player/hls/TieTuesday.m3u8"
       type="application/x-mpegURL"> -->
  </video>
  <script>
    videojs.options.flash.swf = 'node_modules/video.js/dist/video-js/video-js.swf';
    // initialize the player
    var player = videojs('video');
  </script>
  